[
    {
        "id": "84fc9f46c4b65c0e",
        "type": "tab",
        "label": "Puffermanagement",
        "disabled": false,
        "info": ""
    },
    {
        "id": "37d3dae1.129ff6",
        "type": "tab",
        "label": "Sensoren",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9cca99e1.170d68",
        "type": "tab",
        "label": "Mischersteuerung",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2abd751f.509ec2",
        "type": "subflow",
        "name": "Puffer",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 180,
                "y": 340,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 820,
                "y": 340,
                "wires": [
                    {
                        "id": "2abd751f.509ec2",
                        "port": 0
                    }
                ]
            },
            {
                "x": 820,
                "y": 540,
                "wires": [
                    {
                        "id": "e1eeeb50.82bb78",
                        "port": 0
                    }
                ]
            },
            {
                "x": 820,
                "y": 580,
                "wires": [
                    {
                        "id": "2cfa16e9.ff93a2",
                        "port": 0
                    }
                ]
            },
            {
                "x": 820,
                "y": 620,
                "wires": [
                    {
                        "id": "839a826c.6a1c9",
                        "port": 0
                    }
                ]
            },
            {
                "x": 820,
                "y": 660,
                "wires": [
                    {
                        "id": "e7fcee95.e592a8",
                        "port": 0
                    }
                ]
            },
            {
                "x": 820,
                "y": 780,
                "wires": [
                    {
                        "id": "d77e05af.d56588",
                        "port": 0
                    }
                ]
            },
            {
                "x": 820,
                "y": 920,
                "wires": [
                    {
                        "id": "6a83910a.97ed58",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "Sensor1",
                "type": "str",
                "value": ""
            },
            {
                "name": "Sensor2",
                "type": "str",
                "value": ""
            },
            {
                "name": "Sensor3",
                "type": "str",
                "value": ""
            },
            {
                "name": "Sensor4",
                "type": "str",
                "value": ""
            },
            {
                "name": "load_topic",
                "type": "str",
                "value": ""
            },
            {
                "name": "automatic_topic",
                "type": "str",
                "value": ""
            },
            {
                "name": "parameters",
                "type": "json",
                "value": "{\"suppliers\":[{\"sensor\":null,\"loss\":2,\"overheating_sensor\":null,\"overheating_temperature\":71}],\"max_temperatures\":{},\"min_temperatures\":{}}"
            }
        ],
        "color": "#DDAA99",
        "outputLabels": [
            "Weiterleitung von Eingang",
            "Temperatur Sensor 1",
            "Temperatur Sensor 2",
            "Temperatur Sensor 3",
            "Temperatur Sensor 4",
            "Status Laden",
            "Automatik"
        ],
        "icon": "node-red/db.svg",
        "status": {
            "x": 180,
            "y": 100,
            "wires": []
        }
    },
    {
        "id": "8f1b21d8c0c0ebb9",
        "type": "group",
        "z": "84fc9f46c4b65c0e",
        "name": "Dashboard",
        "style": {
            "fill": "#d1d1d1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6055fb308b5951b4",
            "e45b9299ce02bc7a",
            "47e8196dc47f1de3",
            "a8a6b47de708541d",
            "c2bc38edfba70378",
            "12ef5d32413be9f7",
            "89b7e04bf76eccbb",
            "90f61624ee599340",
            "86b3b67e4d05a8e4",
            "74a7af055ff0fa72",
            "f2fb8120f87c55a9",
            "974decfed7ad8f7d",
            "df747313d19d292a",
            "2fe6700250a381bf",
            "8ee412ef1fb8487f",
            "b5c3d2893586c57f"
        ],
        "x": 334,
        "y": 99,
        "w": 952,
        "h": 602
    },
    {
        "id": "e0ce2b8fee72a2da",
        "type": "group",
        "z": "84fc9f46c4b65c0e",
        "name": "System Commands",
        "style": {
            "fill": "#d1d1d1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b6248707f3fe8906",
            "7aa9e42c0ad12918",
            "6c7ca138678c6b2a",
            "6755d431aa79dcc3",
            "eee189fc3ba7c14f",
            "31e44b21d46d968f",
            "0aab4e251c11b784",
            "95e4cf146a79408e"
        ],
        "x": 274,
        "y": 2091.5,
        "w": 1012,
        "h": 297
    },
    {
        "id": "5a7a2bc2a30e6e2c",
        "type": "group",
        "z": "84fc9f46c4b65c0e",
        "name": "Puffer Heizraum",
        "style": {
            "label": true
        },
        "nodes": [
            "5ca67bf7349473c1",
            "2a0ddade29a63c73",
            "f1083d4ef7dae0a9",
            "0823747c4e4b960b",
            "6c38830731235902",
            "3a9b5519cd944532",
            "fe8b510fe53e121d"
        ],
        "x": 334,
        "y": 759,
        "w": 792,
        "h": 242
    },
    {
        "id": "bc95ad173c5ea766",
        "type": "group",
        "z": "84fc9f46c4b65c0e",
        "name": "Puffer Heizkreis",
        "style": {
            "label": true
        },
        "nodes": [
            "09dc75e24b090fd0",
            "e29d42f664bf31bd",
            "3a17f91377a4caff",
            "e685a11153146672",
            "8c103aaf685bc5f6",
            "2604fb4b3b71884d",
            "3e74c0b350cebdb2",
            "0b091534b0df6d4e",
            "085f1d09ca784429",
            "a1d159e0022a2a63",
            "96f9c37fba902f0a",
            "dcd4bb330bb08042",
            "165f89a8be14a3fe"
        ],
        "x": 294,
        "y": 1039,
        "w": 1012,
        "h": 482
    },
    {
        "id": "0dbbbbeba1311e07",
        "type": "group",
        "z": "84fc9f46c4b65c0e",
        "name": "Puffer Brauchwasser",
        "style": {
            "label": true
        },
        "nodes": [
            "434aea5272613a59",
            "d01823e051b097db",
            "d6f3884c024d5fb7",
            "5a2bde4403eb83e5",
            "e086ae30ccdd8c5c",
            "c72db5b481f660e3",
            "9aa9aa563a3dadc2",
            "c46a6881b9402084",
            "0383fb6de2c5ffe8",
            "f7addac754e6966d",
            "625d62981ced86a6",
            "cbbe40ae3867fb2b"
        ],
        "x": 314,
        "y": 1579,
        "w": 1092,
        "h": 382
    },
    {
        "id": "8a3bb4a6.0dfde8",
        "type": "group",
        "z": "9cca99e1.170d68",
        "name": "Heizkreis und Mischer",
        "style": {
            "fill": "#d1d1d1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f71679d.aea5508",
            "4e1321df.8f6b4",
            "138de99b.b0f726",
            "b2c53d17.6e47f8",
            "afacc0ae.295eb8",
            "d27e3dd8.67d608",
            "6d1e4684.73134",
            "c4a1847f.56f95",
            "96fb6626.f6a998",
            "91eaed08.28107",
            "1056c756.42e681",
            "fb2feaac.bff7d",
            "4b7b36e4.483aa8",
            "98cabf7d.778b88",
            "12f848c9.040157",
            "b8c2d750.b4bb88",
            "3f596c5a.6514fc",
            "602cd7c6.77f1",
            "7650c94a.d6e7c",
            "f6204444.6fdf88",
            "2467d4c2.35bbac",
            "51cdc994.8243a8",
            "8e3c19f8.042ab8",
            "956c2937.881b1",
            "ffca6199.8325f",
            "cda21e86.56f2e",
            "e3aa0446.346a78",
            "57decf77.8d07e",
            "9109af28.583e",
            "d867662.87a1298",
            "9e048668.5369a8",
            "9fc9a5143f534e97",
            "2071c05983be31bd",
            "b8c5eec3414e7231"
        ],
        "x": 64,
        "y": 1479,
        "w": 1442,
        "h": 642
    },
    {
        "id": "e2e1a8f5.d9ce9",
        "type": "group",
        "z": "9cca99e1.170d68",
        "name": "Set context variables",
        "style": {
            "fill": "#d1d1d1",
            "label": true
        },
        "nodes": [
            "f11dced2.19e3b",
            "72a573d2.dd954c",
            "18276e49.2da3b2",
            "8fa2e60b.250c1",
            "558041c8.14396",
            "c8b99fa7.5123a8",
            "e3db354.6766748",
            "13cec1ea.9dd3de",
            "ac2a9b70.e42788",
            "7abc7777.db1b28",
            "1774f149.7eb5bf",
            "ef6d7064.443fa",
            "7550b289.066954",
            "b4fd1a95.932ca",
            "29d07ec.404f402"
        ],
        "x": 34,
        "y": 39,
        "w": 812,
        "h": 422
    },
    {
        "id": "9c9be609.56ef8",
        "type": "group",
        "z": "9cca99e1.170d68",
        "name": "Vorlauf Calculation",
        "style": {
            "stroke": "#000000",
            "fill": "#7fb7df",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "a702e8d2.e4c1a8",
            "bf86ac2.cf633d",
            "d6a54ee.abd0eb",
            "a27856df.14173",
            "d7cc465f.79d948",
            "6434f846.c832",
            "dcb9e1f8.c69f3",
            "3b0f3160.98bec6"
        ],
        "x": 64,
        "y": 959,
        "w": 1422,
        "h": 162
    },
    {
        "id": "5c0277c4.cc674",
        "type": "group",
        "z": "9cca99e1.170d68",
        "name": "Heating Status",
        "style": {
            "stroke": "#000000",
            "fill": "#ffbfbf",
            "label": true
        },
        "nodes": [
            "d1d1ef29.fcda8",
            "54116430.c00884",
            "f5e7433b.f6dc5",
            "e11e378e.16d788",
            "94b0e331.394bb8",
            "fc235731.15e17",
            "c45b691e.8ca66"
        ],
        "x": 74,
        "y": 1219,
        "w": 1092,
        "h": 202
    },
    {
        "id": "a1732fa5.9289e",
        "type": "group",
        "z": "9cca99e1.170d68",
        "name": "Mixer Control Loop",
        "style": {
            "fill": "#ffff7f",
            "label": true
        },
        "nodes": [
            "6d2a173c.0739f",
            "9b8aabc0.eee198",
            "898dd0ca.bc6d7",
            "b60b551.18a5a28",
            "e6103245.8a8e4",
            "41d03b1b.5912e4",
            "af0adec0.f89ae",
            "6e04e254.c7553c"
        ],
        "x": 74,
        "y": 679,
        "w": 1302,
        "h": 202
    },
    {
        "id": "bcebf477.ab97e8",
        "type": "mqtt-broker",
        "name": "MQTT on 192.168.1.38",
        "broker": "192.168.1.38",
        "port": "1884",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "100",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "4b772f87.12ab1",
        "type": "ui_tab",
        "name": "Heizung",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a4d65fc0.4b0f28",
        "type": "ui_tab",
        "name": "Verlauf",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ebb1ed1c.5ebe2",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "970798f9.ff53c8",
        "type": "ui_tab",
        "name": "Tools",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "63dfa255.33424c",
        "type": "ui_group",
        "name": "Puffer Brauchwasser",
        "tab": "4b772f87.12ab1",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true
    },
    {
        "id": "77dbbe3a.99fa3",
        "type": "ui_group",
        "name": "Puffer Heizkreis",
        "tab": "4b772f87.12ab1",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true
    },
    {
        "id": "526921e2.2519f",
        "type": "ui_group",
        "name": "Mischer",
        "tab": "4b772f87.12ab1",
        "order": 4,
        "disp": true,
        "width": "5",
        "collapse": true,
        "className": ""
    },
    {
        "id": "16acd5a3.070ef2",
        "type": "ui_group",
        "name": "Puffer Heizraum",
        "tab": "4b772f87.12ab1",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true
    },
    {
        "id": "8a48955d.4ec298",
        "type": "ui_group",
        "name": "Allgemein",
        "tab": "970798f9.ff53c8",
        "order": 8,
        "disp": true,
        "width": "4",
        "collapse": true
    },
    {
        "id": "8ac8701e.7362d",
        "type": "ui_group",
        "name": "Verlaufsübersicht",
        "tab": "a4d65fc0.4b0f28",
        "order": 8,
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "a562987.7dc6f68",
        "type": "ui_group",
        "name": "Parameter",
        "tab": "4b772f87.12ab1",
        "order": 7,
        "disp": true,
        "width": "4",
        "collapse": true
    },
    {
        "id": "2ac8e3fa.8b8584",
        "type": "ui_group",
        "name": "Default",
        "tab": "ebb1ed1c.5ebe2",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "28bde750.d2c1f8",
        "type": "ui_group",
        "name": "Heizungspumpe",
        "tab": "4b772f87.12ab1",
        "order": 5,
        "disp": true,
        "width": "4",
        "collapse": true
    },
    {
        "id": "10788b43.59cf15",
        "type": "ui_group",
        "name": "Para",
        "tab": "970798f9.ff53c8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9e9558a4.c0dab8",
        "type": "ui_group",
        "name": "Sensorlist",
        "tab": "970798f9.ff53c8",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "578f88c6.d37518",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#ec7000",
                "baseFont": "Lucida Sans Unicode,Lucida Grande,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#ec7000",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#ec7000",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#ff9739",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#ec7000",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "Lucida Sans Unicode,Lucida Grande,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Ottn IoT Zentrale",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 1,
                "py": 1
            }
        }
    },
    {
        "id": "e1eeeb50.82bb78",
        "type": "mqtt in",
        "z": "2abd751f.509ec2",
        "name": "",
        "topic": "${Sensor1}",
        "qos": "1",
        "datatype": "json",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 220,
        "y": 540,
        "wires": [
            [
                "ca36556e.ca3298"
            ]
        ]
    },
    {
        "id": "2cfa16e9.ff93a2",
        "type": "mqtt in",
        "z": "2abd751f.509ec2",
        "name": "",
        "topic": "${Sensor2}",
        "qos": "1",
        "datatype": "json",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 220,
        "y": 580,
        "wires": [
            [
                "ca36556e.ca3298"
            ]
        ]
    },
    {
        "id": "839a826c.6a1c9",
        "type": "mqtt in",
        "z": "2abd751f.509ec2",
        "name": "",
        "topic": "${Sensor3}",
        "qos": "1",
        "datatype": "json",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 220,
        "y": 620,
        "wires": [
            [
                "ca36556e.ca3298"
            ]
        ]
    },
    {
        "id": "e7fcee95.e592a8",
        "type": "mqtt in",
        "z": "2abd751f.509ec2",
        "name": "",
        "topic": "${Sensor4}",
        "qos": "0",
        "datatype": "json",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 220,
        "y": 660,
        "wires": [
            [
                "ca36556e.ca3298"
            ]
        ]
    },
    {
        "id": "6bba0199.496aa",
        "type": "change",
        "z": "2abd751f.509ec2",
        "name": "String2Boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 920,
        "wires": [
            [
                "6a83910a.97ed58"
            ]
        ]
    },
    {
        "id": "dfe8d7aa.f96168",
        "type": "mqtt in",
        "z": "2abd751f.509ec2",
        "name": "",
        "topic": "${automatic_topic}",
        "qos": "2",
        "datatype": "auto",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 250,
        "y": 920,
        "wires": [
            [
                "6bba0199.496aa"
            ]
        ]
    },
    {
        "id": "6a83910a.97ed58",
        "type": "function",
        "z": "2abd751f.509ec2",
        "name": "SetEnabledContext",
        "func": "flow.set('is_enabled', msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nflow.set('is_enabled', true);",
        "finalize": "",
        "x": 670,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "ca36556e.ca3298",
        "type": "function",
        "z": "2abd751f.509ec2",
        "name": "Store Temperatures Locally",
        "func": "\ntemp_map = flow.get('temperatures');\n\nif (typeof msg.topic !== 'undefined'){\n    temp_map[msg.topic] = msg.payload;\n    \n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\nflow.set('temperatures', {});",
        "finalize": "",
        "x": 520,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "3a510198.16496e",
        "type": "change",
        "z": "2abd751f.509ec2",
        "name": "String2Boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 1060,
        "wires": [
            [
                "37b3d97e.19d8b6"
            ]
        ]
    },
    {
        "id": "3da98469.528c2c",
        "type": "mqtt in",
        "z": "2abd751f.509ec2",
        "name": "",
        "topic": "${load_topic}",
        "qos": "2",
        "datatype": "auto",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 230,
        "y": 1060,
        "wires": [
            [
                "3a510198.16496e",
                "7fffdbf7.4c377c"
            ]
        ]
    },
    {
        "id": "37b3d97e.19d8b6",
        "type": "function",
        "z": "2abd751f.509ec2",
        "name": "SetLoadingContext",
        "func": "flow.set('is_loading', msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\nflow.set('is_loading', false);\n",
        "finalize": "",
        "x": 670,
        "y": 1060,
        "wires": [
            [
                "afd737e6.3b3978"
            ]
        ]
    },
    {
        "id": "e433543f.bdf908",
        "type": "inject",
        "z": "2abd751f.509ec2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "load_topic",
                "vt": "env"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 230,
        "y": 780,
        "wires": [
            [
                "9fa8465f.6fdd5"
            ]
        ]
    },
    {
        "id": "d77e05af.d56588",
        "type": "function",
        "z": "2abd751f.509ec2",
        "name": "calculate loading status",
        "func": "// parameters\n\n// initialize \nlocals = {}\nlocals.logs = []\n\nlocals.is_hot = 0\nlocals.is_cold = 0\nlocals.can_load = 0\nlocals.supplier_overheating = 0\nlocals.new_loading_state = 0\n\n// read msg\nis_loading = msg.args.is_loading\nis_enabled = msg.args.is_enabled\nold_state = msg.args.old_state\ntemperatures = msg.args.temperatures\nglobal_temperatures = msg.args.global_temperatures\nmax_temperatures = msg.parameters.max_temperatures\nmin_temperatures = msg.parameters.min_temperatures\nsuppliers = msg.parameters.suppliers\n\n\n// precalculations\nlocals.lowest_temp = Math.min(...Object.values(temperatures));\n\n\n// Rule 1: temperature too high -> stop loading\nfor (var sensor_topic in max_temperatures){\n    locals.is_hot |= temperatures[sensor_topic] > max_temperatures[sensor_topic]\n}\n\n// Rule 2: temperature too low -> start loading\nfor (var sensor_topic in min_temperatures){\n    locals.is_cold |= temperatures[sensor_topic] < min_temperatures[sensor_topic]\n}\n\n// Rule 3: check if we have some sufficient supplier\nfor (var idx in suppliers){\n    supplier = suppliers[idx]\n    locals.supplier_temp = global_temperatures[supplier.sensor]\n    locals.can_load |= (locals.supplier_temp > locals.lowest_temp + supplier.loss)\n}\n\n\n// Rule 4: Force loading if supplier is overheading\nfor (var idx in suppliers){\n    supplier = suppliers[idx]\n    locals.overheat_temp = global_temperatures[supplier.overheating_sensor]\n    locals.supplier_overheating |= (locals.overheat_temp > supplier.overheating_temperature)\n}\n\n/*\n// Apply rules\nif (!is_enabled) {\n    // manual mode -> do nothing automatically\n    locals.new_loading_state = is_loading;\n}\n*/\nif (locals.supplier_overheating) {\n    // protect the supplier by taking the hot water\n    locals.new_loading_state = true;\n    \n    } else if (locals.is_hot) {\n    // stop because buffer is full\n    locals.new_loading_state = false;\n    \n    } else if (!locals.can_load) {\n    // disable as soon as we cannot load anymore\n    locals.new_loading_state = false;\n    \n    } else if (locals.is_cold && locals.can_load) {\n    // start loading as soon as we are getting too cold\n    locals.new_loading_state = true;\n    \n    } else {\n    locals.new_loading_state = is_loading\n}\n\nif (is_loading != locals.new_loading_state) {\n    locals.logs.push(locals.new_loading_state ? \"Start loading\" : \"Stop loading\");\n    }\n    else {\n        locals.logs.push(locals.new_loading_state ? \"Remain loading\" : \"Remain idle\");\n    }\n    \n// Logging\nlocals.new_state = {\n    \"is_loading\": locals.new_loading_state,\n    \"is_hot\": locals.is_hot, \n    \"is_cold\": locals.is_cold, \n    \"can_load\": locals.can_load, \n    \"supplier_overheating\": locals.supplier_overheating\n}\n\n\nif (old_state != locals.new_state) {\n    flow.set('state', locals.new_state);\n}\n\n\n// initialize msg\nmsg = {\n    \"topic\": msg.topic,\n    \"payload\": locals.new_loading_state\n}\n\nreturn [msg, locals]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 780,
        "wires": [
            [
                "afd737e6.3b3978"
            ],
            [
                "2a9130f6.a0b258"
            ]
        ],
        "outputLabels": [
            "result",
            ""
        ]
    },
    {
        "id": "20b984e5.013abc",
        "type": "change",
        "z": "2abd751f.509ec2",
        "d": true,
        "name": "set msg args",
        "rules": [
            {
                "t": "set",
                "p": "args.temperatures",
                "pt": "msg",
                "to": "temperatures",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "args.global_temperatures",
                "pt": "msg",
                "to": "temperatures",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "parameters",
                "pt": "msg",
                "to": "$env('parameters')",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "args.is_loading",
                "pt": "msg",
                "to": "is_loading",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "args.is_enabled",
                "pt": "msg",
                "to": "is_enabled",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "args.old_state",
                "pt": "msg",
                "to": "state",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "afd737e6.3b3978",
        "type": "function",
        "z": "2abd751f.509ec2",
        "name": "Build status",
        "func": "msg.payload = {\n    \"text\": \"Charging: \" + msg.payload,\n    \"fill\": msg.payload ? \"green\" : \"red\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "7fffdbf7.4c377c",
        "type": "debug",
        "z": "2abd751f.509ec2",
        "d": true,
        "name": "pufferbug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 720,
        "wires": []
    },
    {
        "id": "9fa8465f.6fdd5",
        "type": "change",
        "z": "2abd751f.509ec2",
        "name": "set msg args",
        "rules": [
            {
                "t": "set",
                "p": "args.temperatures",
                "pt": "msg",
                "to": "temperatures",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "args.global_temperatures",
                "pt": "msg",
                "to": "temperatures",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "parameters",
                "pt": "msg",
                "to": "parameters",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "args.is_loading",
                "pt": "msg",
                "to": "is_loading",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "args.is_enabled",
                "pt": "msg",
                "to": "is_enabled",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "args.old_state",
                "pt": "msg",
                "to": "state",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 720,
        "wires": [
            [
                "d77e05af.d56588"
            ]
        ]
    },
    {
        "id": "2a9130f6.a0b258",
        "type": "debug",
        "z": "2abd751f.509ec2",
        "name": "set args",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 700,
        "wires": []
    },
    {
        "id": "6055fb308b5951b4",
        "type": "mqtt in",
        "z": "84fc9f46c4b65c0e",
        "g": "8f1b21d8c0c0ebb9",
        "name": "",
        "topic": "sensors/heizkreis/vorlauf_ist",
        "qos": "0",
        "datatype": "auto",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 480,
        "y": 460,
        "wires": [
            [
                "12ef5d32413be9f7",
                "90f61624ee599340"
            ]
        ]
    },
    {
        "id": "e45b9299ce02bc7a",
        "type": "mqtt in",
        "z": "84fc9f46c4b65c0e",
        "g": "8f1b21d8c0c0ebb9",
        "name": "",
        "topic": "sensors/aussentemperatur",
        "qos": "0",
        "datatype": "auto",
        "broker": "bcebf477.ab97e8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 470,
        "y": 240,
        "wires": [
            [
                "47e8196dc47f1de3",
                "90f61624ee599340"
            ]
        ]
    },
    {
        "id": "a8a6b47de708541d",
        "type": "mqtt in",
        "z": "84fc9f46c4b65c0e",
        "g": "8f1b21d8c0c0ebb9",
        "name": "",
        "topic": "mischer/heizkreis/vorlauf_soll",
        "qos": "0",
        "datatype": "auto",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 480,
        "y": 360,
        "wires": [
            [
                "c2bc38edfba70378",
                "90f61624ee599340",
                "b5c3d2893586c57f"
            ]
        ]
    },
    {
        "id": "6c7ca138678c6b2a",
        "type": "exec",
        "z": "84fc9f46c4b65c0e",
        "g": "e0ce2b8fee72a2da",
        "command": "sudo reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 770,
        "y": 2140,
        "wires": [
            [],
            [
                "b6248707f3fe8906"
            ],
            []
        ]
    },
    {
        "id": "eee189fc3ba7c14f",
        "type": "exec",
        "z": "84fc9f46c4b65c0e",
        "g": "e0ce2b8fee72a2da",
        "command": "git --git-dir=/home/pi/Thermoberry/.git checkout HEAD -- conf/config.yaml",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 880,
        "y": 2260,
        "wires": [
            [],
            [
                "b6248707f3fe8906"
            ],
            []
        ]
    },
    {
        "id": "5ca67bf7349473c1",
        "type": "subflow:2abd751f.509ec2",
        "z": "84fc9f46c4b65c0e",
        "g": "5a7a2bc2a30e6e2c",
        "name": "Puffer Heizraum",
        "env": [
            {
                "name": "Sensor1",
                "value": "sensors/heizraum/1",
                "type": "str"
            },
            {
                "name": "Sensor2",
                "value": "sensors/heizraum/2",
                "type": "str"
            },
            {
                "name": "Sensor3",
                "value": "sensors/heizraum/3",
                "type": "str"
            },
            {
                "name": "Sensor4",
                "value": "sensors/heizraum/4",
                "type": "str"
            },
            {
                "name": "load_topic",
                "value": "puffer/heizraum/load",
                "type": "str"
            },
            {
                "name": "automatic_topic",
                "value": "puffer/heizraum/automatik",
                "type": "str"
            },
            {
                "name": "parameters",
                "value": "{\"suppliers\":[],\"max_temperatures\":{},\"min_temperatures\":{}}",
                "type": "json"
            }
        ],
        "x": 440,
        "y": 880,
        "wires": [
            [],
            [
                "f1083d4ef7dae0a9",
                "fe8b510fe53e121d"
            ],
            [
                "f1083d4ef7dae0a9",
                "0823747c4e4b960b"
            ],
            [
                "f1083d4ef7dae0a9",
                "6c38830731235902"
            ],
            [
                "f1083d4ef7dae0a9",
                "3a9b5519cd944532"
            ],
            [],
            []
        ]
    },
    {
        "id": "09dc75e24b090fd0",
        "type": "subflow:2abd751f.509ec2",
        "z": "84fc9f46c4b65c0e",
        "g": "bc95ad173c5ea766",
        "name": "Puffer Heizkreis",
        "env": [
            {
                "name": "Sensor1",
                "value": "sensors/heizkreis/1",
                "type": "str"
            },
            {
                "name": "Sensor2",
                "value": "sensors/heizkreis/2",
                "type": "str"
            },
            {
                "name": "Sensor3",
                "value": "sensors/heizkreis/3",
                "type": "str"
            },
            {
                "name": "Sensor4",
                "value": "sensors/heizkreis/4",
                "type": "str"
            },
            {
                "name": "load_topic",
                "value": "puffer/heizkreis/load",
                "type": "str"
            },
            {
                "name": "automatic_topic",
                "value": "puffer/heizkreis/automatik",
                "type": "str"
            },
            {
                "name": "parameters",
                "value": "{\"suppliers\":[{\"sensor\":\"sensors/heizraum/1\",\"loss\":4,\"overheating_sensor\":\"sensors/heizraum/4\",\"overheating_temperature\":71}],\"max_temperatures\":{\"sensors/heizkreis/4\":50},\"min_temperatures\":{\"sensors/heizkreis/1\":47}}",
                "type": "json"
            }
        ],
        "x": 400,
        "y": 1360,
        "wires": [
            [],
            [
                "8c103aaf685bc5f6",
                "dcd4bb330bb08042"
            ],
            [
                "e685a11153146672",
                "dcd4bb330bb08042"
            ],
            [
                "3a17f91377a4caff",
                "dcd4bb330bb08042"
            ],
            [
                "e29d42f664bf31bd",
                "dcd4bb330bb08042"
            ],
            [
                "165f89a8be14a3fe",
                "2604fb4b3b71884d"
            ],
            [
                "0b091534b0df6d4e"
            ]
        ]
    },
    {
        "id": "434aea5272613a59",
        "type": "subflow:2abd751f.509ec2",
        "z": "84fc9f46c4b65c0e",
        "g": "0dbbbbeba1311e07",
        "name": "Puffer Brauchwasser",
        "env": [
            {
                "name": "Sensor1",
                "value": "sensors/brauchwasser/1",
                "type": "str"
            },
            {
                "name": "Sensor2",
                "value": "sensors/brauchwasser/2",
                "type": "str"
            },
            {
                "name": "Sensor3",
                "value": "sensors/brauchwasser/3",
                "type": "str"
            },
            {
                "name": "Sensor4",
                "value": "sensors/brauchwasser/4",
                "type": "str"
            },
            {
                "name": "load_topic",
                "value": "puffer/brauchwasser/load",
                "type": "str"
            },
            {
                "name": "automatic_topic",
                "value": "puffer/brauchwasser/automatik",
                "type": "str"
            },
            {
                "name": "parameters",
                "value": "{\"suppliers\":[{\"sensor\":\"sensors/heizkreis/1\",\"loss\":5,\"overheating_sensor\":\"sensors/heizkreis/4\",\"overheating_temperature\":71}],\"max_temperatures\":{\"sensors/brauchwasser/3\":55},\"min_temperatures\":{\"sensors/brauchwasser/3\":50}}",
                "type": "json"
            }
        ],
        "x": 440,
        "y": 1840,
        "wires": [
            [],
            [
                "d01823e051b097db"
            ],
            [
                "d6f3884c024d5fb7"
            ],
            [
                "5a2bde4403eb83e5"
            ],
            [
                "e086ae30ccdd8c5c"
            ],
            [
                "c72db5b481f660e3"
            ],
            [
                "f7addac754e6966d"
            ]
        ]
    },
    {
        "id": "9aa9aa563a3dadc2",
        "type": "mqtt out",
        "z": "84fc9f46c4b65c0e",
        "g": "0dbbbbeba1311e07",
        "name": "",
        "topic": "puffer/brauchwasser/load",
        "qos": "2",
        "retain": "true",
        "broker": "bcebf477.ab97e8",
        "x": 1170,
        "y": 1860,
        "wires": []
    },
    {
        "id": "3e74c0b350cebdb2",
        "type": "mqtt out",
        "z": "84fc9f46c4b65c0e",
        "g": "bc95ad173c5ea766",
        "name": "",
        "topic": "puffer/heizkreis/load",
        "qos": "",
        "retain": "false",
        "broker": "bcebf477.ab97e8",
        "x": 1180,
        "y": 1360,
        "wires": []
    },
    {
        "id": "c46a6881b9402084",
        "type": "function",
        "z": "84fc9f46c4b65c0e",
        "g": "0dbbbbeba1311e07",
        "name": "Invert",
        "func": "msg.payload = !msg.payload\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 1760,
        "wires": [
            [
                "0383fb6de2c5ffe8",
                "cbbe40ae3867fb2b"
            ]
        ]
    },
    {
        "id": "625d62981ced86a6",
        "type": "mqtt out",
        "z": "84fc9f46c4b65c0e",
        "g": "0dbbbbeba1311e07",
        "name": "",
        "topic": "puffer/brauchwasser/automatik",
        "qos": "2",
        "retain": "true",
        "broker": "bcebf477.ab97e8",
        "x": 1190,
        "y": 1920,
        "wires": []
    },
    {
        "id": "085f1d09ca784429",
        "type": "mqtt out",
        "z": "84fc9f46c4b65c0e",
        "g": "bc95ad173c5ea766",
        "name": "",
        "topic": "puffer/heizkreis/automatik",
        "qos": "2",
        "retain": "true",
        "broker": "bcebf477.ab97e8",
        "x": 1030,
        "y": 1440,
        "wires": []
    },
    {
        "id": "74a7af055ff0fa72",
        "type": "mqtt in",
        "z": "84fc9f46c4b65c0e",
        "g": "8f1b21d8c0c0ebb9",
        "name": "",
        "topic": "puffer/brauchwasser/load",
        "qos": "2",
        "datatype": "auto",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 470,
        "y": 520,
        "wires": [
            [
                "df747313d19d292a"
            ]
        ]
    },
    {
        "id": "2fe6700250a381bf",
        "type": "change",
        "z": "84fc9f46c4b65c0e",
        "g": "8f1b21d8c0c0ebb9",
        "name": "String2Number",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 600,
        "wires": [
            [
                "8ee412ef1fb8487f"
            ]
        ]
    },
    {
        "id": "96f9c37fba902f0a",
        "type": "mqtt in",
        "z": "84fc9f46c4b65c0e",
        "g": "bc95ad173c5ea766",
        "name": "",
        "topic": "sensors/mischer/soll",
        "qos": "0",
        "datatype": "auto",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 410,
        "y": 1080,
        "wires": [
            [
                "dcd4bb330bb08042"
            ]
        ]
    },
    {
        "id": "974decfed7ad8f7d",
        "type": "mqtt in",
        "z": "84fc9f46c4b65c0e",
        "g": "8f1b21d8c0c0ebb9",
        "name": "",
        "topic": "pumpe/heizkreis/ein",
        "qos": "2",
        "datatype": "auto",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 450,
        "y": 660,
        "wires": [
            [
                "df747313d19d292a"
            ]
        ]
    },
    {
        "id": "f2fb8120f87c55a9",
        "type": "mqtt in",
        "z": "84fc9f46c4b65c0e",
        "g": "8f1b21d8c0c0ebb9",
        "name": "",
        "topic": "puffer/heizkreis/load",
        "qos": "1",
        "datatype": "auto",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 450,
        "y": 600,
        "wires": [
            [
                "df747313d19d292a"
            ]
        ]
    },
    {
        "id": "0aab4e251c11b784",
        "type": "exec",
        "z": "84fc9f46c4b65c0e",
        "g": "e0ce2b8fee72a2da",
        "command": "git --git-dir=/home/pi/Thermoberry/.git pull",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 780,
        "y": 2340,
        "wires": [
            [
                "95e4cf146a79408e"
            ],
            [
                "b6248707f3fe8906"
            ],
            []
        ]
    },
    {
        "id": "df747313d19d292a",
        "type": "delay",
        "z": "84fc9f46c4b65c0e",
        "g": "8f1b21d8c0c0ebb9",
        "name": "",
        "pauseType": "timed",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "15",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 740,
        "y": 600,
        "wires": [
            [
                "2fe6700250a381bf"
            ]
        ]
    },
    {
        "id": "dcd4bb330bb08042",
        "type": "delay",
        "z": "84fc9f46c4b65c0e",
        "g": "bc95ad173c5ea766",
        "name": "",
        "pauseType": "timed",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "60",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 840,
        "y": 1080,
        "wires": [
            [
                "a1d159e0022a2a63"
            ]
        ]
    },
    {
        "id": "f1083d4ef7dae0a9",
        "type": "delay",
        "z": "84fc9f46c4b65c0e",
        "g": "5a7a2bc2a30e6e2c",
        "name": "",
        "pauseType": "timed",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "60",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 720,
        "y": 960,
        "wires": [
            [
                "2a0ddade29a63c73"
            ]
        ]
    },
    {
        "id": "90f61624ee599340",
        "type": "delay",
        "z": "84fc9f46c4b65c0e",
        "g": "8f1b21d8c0c0ebb9",
        "name": "",
        "pauseType": "timed",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 840,
        "y": 180,
        "wires": [
            [
                "89b7e04bf76eccbb"
            ]
        ]
    },
    {
        "id": "165f89a8be14a3fe",
        "type": "debug",
        "z": "84fc9f46c4b65c0e",
        "g": "bc95ad173c5ea766",
        "name": "Puffer",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 1480,
        "wires": []
    },
    {
        "id": "b5c3d2893586c57f",
        "type": "debug",
        "z": "84fc9f46c4b65c0e",
        "g": "8f1b21d8c0c0ebb9",
        "name": "Dash",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 420,
        "wires": []
    },
    {
        "id": "7aa9e42c0ad12918",
        "type": "ui_button",
        "z": "84fc9f46c4b65c0e",
        "g": "e0ce2b8fee72a2da",
        "name": "",
        "group": "8a48955d.4ec298",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reboot Raspberry",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 390,
        "y": 2140,
        "wires": [
            [
                "6c7ca138678c6b2a"
            ]
        ]
    },
    {
        "id": "6755d431aa79dcc3",
        "type": "ui_button",
        "z": "84fc9f46c4b65c0e",
        "d": true,
        "g": "e0ce2b8fee72a2da",
        "name": "",
        "group": "8a48955d.4ec298",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Werkseinstellungen wiederherstellen",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 450,
        "y": 2260,
        "wires": [
            [
                "eee189fc3ba7c14f"
            ]
        ]
    },
    {
        "id": "31e44b21d46d968f",
        "type": "ui_button",
        "z": "84fc9f46c4b65c0e",
        "g": "e0ce2b8fee72a2da",
        "name": "",
        "group": "8a48955d.4ec298",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Software Update",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "thermoberry-mixer.service",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 390,
        "y": 2340,
        "wires": [
            [
                "0aab4e251c11b784"
            ]
        ]
    },
    {
        "id": "2604fb4b3b71884d",
        "type": "ui_switch",
        "z": "84fc9f46c4b65c0e",
        "g": "bc95ad173c5ea766",
        "name": "",
        "label": "Laden",
        "tooltip": "",
        "group": "77dbbe3a.99fa3",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "puffer/heizkreis/load",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 950,
        "y": 1320,
        "wires": [
            [
                "3e74c0b350cebdb2"
            ]
        ]
    },
    {
        "id": "c72db5b481f660e3",
        "type": "ui_switch",
        "z": "84fc9f46c4b65c0e",
        "g": "0dbbbbeba1311e07",
        "name": "",
        "label": "Laden",
        "tooltip": "",
        "group": "63dfa255.33424c",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 810,
        "y": 1840,
        "wires": [
            [
                "9aa9aa563a3dadc2",
                "c46a6881b9402084"
            ]
        ]
    },
    {
        "id": "f7addac754e6966d",
        "type": "ui_switch",
        "z": "84fc9f46c4b65c0e",
        "g": "0dbbbbeba1311e07",
        "name": "",
        "label": "Automatik",
        "tooltip": "",
        "group": "63dfa255.33424c",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 820,
        "y": 1900,
        "wires": [
            [
                "625d62981ced86a6"
            ]
        ]
    },
    {
        "id": "0b091534b0df6d4e",
        "type": "ui_switch",
        "z": "84fc9f46c4b65c0e",
        "g": "bc95ad173c5ea766",
        "name": "",
        "label": "Automatik",
        "tooltip": "",
        "group": "77dbbe3a.99fa3",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "puffer/heizkreis/automatik",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 800,
        "y": 1440,
        "wires": [
            [
                "085f1d09ca784429"
            ]
        ]
    },
    {
        "id": "d01823e051b097db",
        "type": "ui_gauge",
        "z": "84fc9f46c4b65c0e",
        "g": "0dbbbbeba1311e07",
        "name": "",
        "group": "63dfa255.33424c",
        "order": 5,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Temperatur 1",
        "label": "°C",
        "format": "{{value}}",
        "min": "20",
        "max": "80",
        "colors": [
            "#0000ff",
            "#ffff00",
            "#ff0000"
        ],
        "seg1": "30",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 810,
        "y": 1620,
        "wires": []
    },
    {
        "id": "d6f3884c024d5fb7",
        "type": "ui_gauge",
        "z": "84fc9f46c4b65c0e",
        "g": "0dbbbbeba1311e07",
        "name": "",
        "group": "63dfa255.33424c",
        "order": 6,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Temperatur 2",
        "label": "°C",
        "format": "{{value}}",
        "min": "20",
        "max": "80",
        "colors": [
            "#0000ff",
            "#ffff00",
            "#ff0000"
        ],
        "seg1": "30",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 810,
        "y": 1660,
        "wires": []
    },
    {
        "id": "5a2bde4403eb83e5",
        "type": "ui_gauge",
        "z": "84fc9f46c4b65c0e",
        "g": "0dbbbbeba1311e07",
        "name": "",
        "group": "63dfa255.33424c",
        "order": 7,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Temperatur 3",
        "label": "°C",
        "format": "{{value}}",
        "min": "20",
        "max": "80",
        "colors": [
            "#4233ff",
            "#b4d257",
            "#ff2b2b"
        ],
        "seg1": "30",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 810,
        "y": 1700,
        "wires": []
    },
    {
        "id": "e086ae30ccdd8c5c",
        "type": "ui_gauge",
        "z": "84fc9f46c4b65c0e",
        "g": "0dbbbbeba1311e07",
        "name": "",
        "group": "63dfa255.33424c",
        "order": 8,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Temperatur 4",
        "label": "°C",
        "format": "{{value}}",
        "min": "20",
        "max": "80",
        "colors": [
            "#0066ff",
            "#aeee44",
            "#ff3333"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 810,
        "y": 1740,
        "wires": []
    },
    {
        "id": "e29d42f664bf31bd",
        "type": "ui_gauge",
        "z": "84fc9f46c4b65c0e",
        "g": "bc95ad173c5ea766",
        "name": "",
        "group": "77dbbe3a.99fa3",
        "order": 8,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Temperatur 4",
        "label": "°C",
        "format": "{{value}}",
        "min": "20",
        "max": "80",
        "colors": [
            "#0000ff",
            "#ffff00",
            "#ff0000"
        ],
        "seg1": "45",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 810,
        "y": 1260,
        "wires": []
    },
    {
        "id": "3a17f91377a4caff",
        "type": "ui_gauge",
        "z": "84fc9f46c4b65c0e",
        "g": "bc95ad173c5ea766",
        "name": "",
        "group": "77dbbe3a.99fa3",
        "order": 7,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Temperatur 3",
        "label": "°C",
        "format": "{{value}}",
        "min": "20",
        "max": "80",
        "colors": [
            "#0000ff",
            "#ffff00",
            "#ff0000"
        ],
        "seg1": "35",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 810,
        "y": 1220,
        "wires": []
    },
    {
        "id": "e685a11153146672",
        "type": "ui_gauge",
        "z": "84fc9f46c4b65c0e",
        "g": "bc95ad173c5ea766",
        "name": "",
        "group": "77dbbe3a.99fa3",
        "order": 6,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Temperatur 2",
        "label": "°C",
        "format": "{{value}}",
        "min": "20",
        "max": "80",
        "colors": [
            "#0000ff",
            "#ffff00",
            "#ff0000"
        ],
        "seg1": "35",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 810,
        "y": 1180,
        "wires": []
    },
    {
        "id": "8c103aaf685bc5f6",
        "type": "ui_gauge",
        "z": "84fc9f46c4b65c0e",
        "g": "bc95ad173c5ea766",
        "name": "",
        "group": "77dbbe3a.99fa3",
        "order": 5,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Temperatur 1",
        "label": "°C",
        "format": "{{value}}",
        "min": "20",
        "max": "80",
        "colors": [
            "#0000ff",
            "#ffff00",
            "#ff0000"
        ],
        "seg1": "35",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 810,
        "y": 1140,
        "wires": []
    },
    {
        "id": "0823747c4e4b960b",
        "type": "ui_gauge",
        "z": "84fc9f46c4b65c0e",
        "g": "5a7a2bc2a30e6e2c",
        "name": "",
        "group": "16acd5a3.070ef2",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperatur 2",
        "label": "units",
        "format": "{{value}}",
        "min": "20",
        "max": "80",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 970,
        "y": 840,
        "wires": []
    },
    {
        "id": "6c38830731235902",
        "type": "ui_gauge",
        "z": "84fc9f46c4b65c0e",
        "g": "5a7a2bc2a30e6e2c",
        "name": "",
        "group": "16acd5a3.070ef2",
        "order": 6,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperatur 3",
        "label": "units",
        "format": "{{value}}",
        "min": "20",
        "max": "80",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 970,
        "y": 880,
        "wires": []
    },
    {
        "id": "3a9b5519cd944532",
        "type": "ui_gauge",
        "z": "84fc9f46c4b65c0e",
        "g": "5a7a2bc2a30e6e2c",
        "name": "",
        "group": "16acd5a3.070ef2",
        "order": 7,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperatur 4",
        "label": "units",
        "format": "{{value}}",
        "min": "20",
        "max": "80",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 970,
        "y": 920,
        "wires": []
    },
    {
        "id": "fe8b510fe53e121d",
        "type": "ui_gauge",
        "z": "84fc9f46c4b65c0e",
        "g": "5a7a2bc2a30e6e2c",
        "name": "",
        "group": "16acd5a3.070ef2",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperatur 1",
        "label": "units",
        "format": "{{value}}",
        "min": "20",
        "max": "80",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 970,
        "y": 800,
        "wires": []
    },
    {
        "id": "47e8196dc47f1de3",
        "type": "ui_chart",
        "z": "84fc9f46c4b65c0e",
        "g": "8f1b21d8c0c0ebb9",
        "name": "",
        "group": "526921e2.2519f",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Aussentemperatur",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Keine Temperaturdaten vorhanden",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 850,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "c2bc38edfba70378",
        "type": "ui_chart",
        "z": "84fc9f46c4b65c0e",
        "g": "8f1b21d8c0c0ebb9",
        "name": "",
        "group": "526921e2.2519f",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Vorlauftemperatur Soll",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Keine Daten",
        "dot": false,
        "ymin": "20",
        "ymax": "60",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "12ef5d32413be9f7",
        "type": "ui_chart",
        "z": "84fc9f46c4b65c0e",
        "g": "8f1b21d8c0c0ebb9",
        "name": "",
        "group": "526921e2.2519f",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Vorlauftemperatur Ist",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Keine Daten",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "a1d159e0022a2a63",
        "type": "ui_chart",
        "z": "84fc9f46c4b65c0e",
        "g": "bc95ad173c5ea766",
        "name": "",
        "group": "8ac8701e.7362d",
        "order": 3,
        "width": "15",
        "height": "5",
        "label": "Langzeit Heizpuffer und Vorlauf",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "20",
        "ymax": "80",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff4848",
            "#808080",
            "#ffff00",
            "#80ff00",
            "#00ffff",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1150,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "2a0ddade29a63c73",
        "type": "ui_chart",
        "z": "84fc9f46c4b65c0e",
        "g": "5a7a2bc2a30e6e2c",
        "name": "",
        "group": "8ac8701e.7362d",
        "order": 1,
        "width": "15",
        "height": "4",
        "label": "Langzeit Versorgung",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "20",
        "ymax": "80",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff0000",
            "#ffff00",
            "#80ff00",
            "#00ffff",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1000,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "89b7e04bf76eccbb",
        "type": "ui_chart",
        "z": "84fc9f46c4b65c0e",
        "g": "8f1b21d8c0c0ebb9",
        "name": "",
        "group": "8ac8701e.7362d",
        "order": 4,
        "width": "15",
        "height": "5",
        "label": "Vorlauftemperaturen Langzeit",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "20",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#00ff00",
            "#0000ff",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1130,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "8ee412ef1fb8487f",
        "type": "ui_chart",
        "z": "84fc9f46c4b65c0e",
        "g": "8f1b21d8c0c0ebb9",
        "name": "",
        "group": "8ac8701e.7362d",
        "order": 1,
        "width": "15",
        "height": "4",
        "label": "Langzeit Pumpen",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-1",
        "ymax": "2",
        "removeOlder": "20",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff0000",
            "#ffff00",
            "#80ff00",
            "#00ffff",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1170,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "b6248707f3fe8906",
        "type": "ui_toast",
        "z": "84fc9f46c4b65c0e",
        "g": "e0ce2b8fee72a2da",
        "position": "top right",
        "displayTime": "10",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "on error",
        "x": 1180,
        "y": 2140,
        "wires": []
    },
    {
        "id": "95e4cf146a79408e",
        "type": "ui_toast",
        "z": "84fc9f46c4b65c0e",
        "g": "e0ce2b8fee72a2da",
        "position": "top right",
        "displayTime": "10",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "on success",
        "x": 1190,
        "y": 2340,
        "wires": []
    },
    {
        "id": "86b3b67e4d05a8e4",
        "type": "ui_template",
        "z": "84fc9f46c4b65c0e",
        "g": "8f1b21d8c0c0ebb9",
        "group": "8a48955d.4ec298",
        "name": "Clock Toolbar",
        "order": 8,
        "width": "0",
        "height": "0",
        "format": "<script id=\"titleScript\" type=\"text/javascript\">\n    $('#clock').remove();\n    var toolbar = $('.md-toolbar-tools');\n    var div = $('<div/>');\n    var p = $('<p/ id=\"clock\">');\n    \n    $('#titleScript').parent().hide();\n    div.append(p);\n    div[0].style.margin = '5px 5px 5px auto';\n    toolbar.append(div);\n\n    function displayTitle(lh) {\n        p.text(lh); \n    }\n    \n    function upTime() {\n        var d = new Date();\n        p.text(d.toLocaleTimeString('de-AT'));\n    }\n\n    \n\n    // Watch the payload and update the title\n    (function(scope) {\n        scope.$watch('msg.payload', function(data) {\n            displayTitle(data);\n        });\n        setInterval(upTime,1000);\n    })(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 460,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "0383fb6de2c5ffe8",
        "type": "rpi-gpio out",
        "z": "84fc9f46c4b65c0e",
        "g": "0dbbbbeba1311e07",
        "name": "Pumpe Brauchwasser",
        "pin": "22",
        "set": false,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 1280,
        "y": 1760,
        "wires": []
    },
    {
        "id": "cbbe40ae3867fb2b",
        "type": "pi-gpiod out",
        "z": "84fc9f46c4b65c0e",
        "g": "0dbbbbeba1311e07",
        "name": "Pumpe Brauchwasser",
        "host": "pigpiod",
        "port": 8888,
        "pin": "22",
        "set": "",
        "level": "0",
        "out": "out",
        "sermin": "1000",
        "sermax": "2000",
        "freq": "800",
        "x": 1280,
        "y": 1700,
        "wires": []
    },
    {
        "id": "6cd6394d.f6c2b8",
        "type": "http request",
        "z": "37d3dae1.129ff6",
        "name": "get sensors",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:1880/sensors/1wire/",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 390,
        "y": 720,
        "wires": [
            [
                "c0e746b.0742fb8"
            ]
        ]
    },
    {
        "id": "792892fa.072fdc",
        "type": "change",
        "z": "37d3dae1.129ff6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temp_sensorid",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "62103c5a.16a0c4",
        "type": "inject",
        "z": "37d3dae1.129ff6",
        "name": "",
        "props": [],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 110,
        "y": 200,
        "wires": [
            [
                "f4987ea6.223a9"
            ]
        ]
    },
    {
        "id": "c0e746b.0742fb8",
        "type": "change",
        "z": "37d3dae1.129ff6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "temp_sensorid",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 720,
        "wires": [
            [
                "f6c5c972.2b0618"
            ]
        ]
    },
    {
        "id": "3a0706f5.8727ba",
        "type": "inject",
        "z": "37d3dae1.129ff6",
        "name": "Initialize Configuration",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 120,
        "wires": [
            [
                "1f287f49.95e5c1",
                "d5edfbe5.87fae8"
            ]
        ]
    },
    {
        "id": "f4987ea6.223a9",
        "type": "function",
        "z": "37d3dae1.129ff6",
        "name": "Get Sensor Mapping",
        "func": "msg.payload = global.get(\"sensor_mapping\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 300,
        "y": 200,
        "wires": [
            [
                "4f912922.a5a728"
            ]
        ]
    },
    {
        "id": "4f912922.a5a728",
        "type": "split",
        "z": "37d3dae1.129ff6",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 490,
        "y": 200,
        "wires": [
            [
                "8891db13.d06b38"
            ]
        ]
    },
    {
        "id": "8891db13.d06b38",
        "type": "function",
        "z": "37d3dae1.129ff6",
        "name": "Prepare msg",
        "func": "msg.sensorid = msg.topic\nmsg.topic = msg.payload;\nmsg.payload = undefined\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 200,
        "wires": [
            [
                "29b7af68.1e6d2"
            ]
        ]
    },
    {
        "id": "17d69ca2.031613",
        "type": "mqtt out",
        "z": "37d3dae1.129ff6",
        "name": "Publish msg",
        "topic": "",
        "qos": "2",
        "retain": "false",
        "broker": "bcebf477.ab97e8",
        "x": 1310,
        "y": 200,
        "wires": []
    },
    {
        "id": "d3f750fc.27e4c",
        "type": "switch",
        "z": "37d3dae1.129ff6",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1090,
        "y": 200,
        "wires": [
            [
                "17d69ca2.031613"
            ]
        ]
    },
    {
        "id": "d6cf5083.fdc6f",
        "type": "debug",
        "z": "37d3dae1.129ff6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 480,
        "wires": []
    },
    {
        "id": "3655d9dc.712db6",
        "type": "comment",
        "z": "37d3dae1.129ff6",
        "name": "This is just an exaple for receiving a list of available sensor ids",
        "info": "",
        "x": 580,
        "y": 680,
        "wires": []
    },
    {
        "id": "d6eb86c4.7145a8",
        "type": "mqtt in",
        "z": "37d3dae1.129ff6",
        "name": "",
        "topic": "sensors/#",
        "qos": "2",
        "datatype": "json",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 350,
        "y": 480,
        "wires": [
            [
                "4b599587.13412c",
                "2420c171.e89226"
            ]
        ]
    },
    {
        "id": "4b599587.13412c",
        "type": "function",
        "z": "37d3dae1.129ff6",
        "name": "Store Temperatures Globally",
        "func": "\ntemp_map = global.get('temperatures');\n\nif (typeof msg.topic !== 'undefined'){\n    temp_map[msg.topic] = msg.payload;\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\nglobal.set('temperatures', {});",
        "finalize": "",
        "x": 640,
        "y": 480,
        "wires": [
            [
                "d6cf5083.fdc6f"
            ]
        ]
    },
    {
        "id": "4ea58aef.f585f4",
        "type": "comment",
        "z": "37d3dae1.129ff6",
        "name": "Adds temperatures to the global context",
        "info": "",
        "x": 550,
        "y": 440,
        "wires": []
    },
    {
        "id": "c2d440.efd89bc",
        "type": "comment",
        "z": "37d3dae1.129ff6",
        "name": "Dynamic node as foundation for dashboard input",
        "info": "Using this dynamic ds18b20 reading node can be used to inject dynamic strings later on. These strings can be set in an UI.",
        "x": 900,
        "y": 160,
        "wires": []
    },
    {
        "id": "2420c171.e89226",
        "type": "debug",
        "z": "37d3dae1.129ff6",
        "name": "aufteilen",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 600,
        "wires": []
    },
    {
        "id": "d5edfbe5.87fae8",
        "type": "debug",
        "z": "37d3dae1.129ff6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 320,
        "wires": []
    },
    {
        "id": "1f287f49.95e5c1",
        "type": "config",
        "z": "37d3dae1.129ff6",
        "name": "Sensor Mapping",
        "properties": [
            {
                "p": "sensor_mapping",
                "pt": "global",
                "to": "{\"28-01193a1a5b9e\":\"sensors/aussentemperatur\",\"28-00044a21bcff\":\"sensors/heizkreis/vorlauf_ist\",\"28-0004633827ff\":\"sensors/heizkreis/1\",\"28-00046335f6ff\":\"sensors/heizkreis/2\",\"28-00044e6b6dff\":\"sensors/heizkreis/3\",\"28-00044c86c8ff\":\"sensors/heizkreis/4\",\"28-00044e7edbff\":\"sensors/brauchwasser/1\",\"28-00044e7371ff\":\"sensors/brauchwasser/2\",\"28-00044e75daff\":\"sensors/brauchwasser/3\",\"28-0004633498ff\":\"sensors/brauchwasser/4\"}",
                "tot": "json"
            }
        ],
        "active": true,
        "x": 460,
        "y": 120,
        "wires": []
    },
    {
        "id": "1a40e9ae.9bcfd6",
        "type": "ds18b20",
        "z": "37d3dae1.129ff6",
        "d": true,
        "name": "",
        "sensorid": "28-01193a1a5b9e",
        "timer": "1",
        "x": 220,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "29b7af68.1e6d2",
        "type": "sensor-dynamic-ds18b20",
        "z": "37d3dae1.129ff6",
        "name": "",
        "topic": "",
        "x": 870,
        "y": 200,
        "wires": [
            [
                "d3f750fc.27e4c"
            ]
        ]
    },
    {
        "id": "3784d17d.192d4e",
        "type": "ui_button",
        "z": "37d3dae1.129ff6",
        "name": "Retrieve sensors",
        "group": "9e9558a4.c0dab8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Retrieve sensors",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 180,
        "y": 720,
        "wires": [
            [
                "6cd6394d.f6c2b8"
            ]
        ]
    },
    {
        "id": "f6c5c972.2b0618",
        "type": "ui_dropdown",
        "z": "37d3dae1.129ff6",
        "name": "temp sensor",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "9e9558a4.c0dab8",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 830,
        "y": 720,
        "wires": [
            [
                "792892fa.072fdc"
            ]
        ]
    },
    {
        "id": "4e1321df.8f6b4",
        "type": "mqtt in",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "",
        "topic": "pumpe/heizkreis/ein",
        "qos": "2",
        "datatype": "auto",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 190,
        "y": 1640,
        "wires": [
            [
                "afacc0ae.295eb8"
            ]
        ]
    },
    {
        "id": "138de99b.b0f726",
        "type": "mqtt out",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "",
        "topic": "pumpe/heizkreis/ein",
        "qos": "2",
        "retain": "true",
        "broker": "bcebf477.ab97e8",
        "x": 1160,
        "y": 1580,
        "wires": []
    },
    {
        "id": "afacc0ae.295eb8",
        "type": "change",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "String2Boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 1640,
        "wires": [
            [
                "f71679d.aea5508",
                "d27e3dd8.67d608"
            ]
        ]
    },
    {
        "id": "d27e3dd8.67d608",
        "type": "function",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "Invert",
        "func": "msg.payload = !msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 850,
        "y": 1640,
        "wires": [
            [
                "b2c53d17.6e47f8",
                "9e048668.5369a8",
                "b8c5eec3414e7231"
            ]
        ]
    },
    {
        "id": "91eaed08.28107",
        "type": "function",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "MutualExclusive",
        "func": "\nmsg1 = {\"payload\": false};\nmsg2 = {\"payload\": false};\nmsg3 = {\"payload\": false};\n\n\nif (msg.topic == \"mischer/automatik\")\n    msg1.payload = msg.payload;\nif (msg.topic == \"mischer/heizkreis/heiss\")\n    msg2.payload = msg.payload;\nif (msg.topic == \"mischer/heizkreis/kalt\")\n    msg3.payload = msg.payload;\n\n\n\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 1780,
        "wires": [
            [],
            [
                "c4a1847f.56f95",
                "e3aa0446.346a78"
            ],
            [
                "96fb6626.f6a998",
                "cda21e86.56f2e"
            ]
        ]
    },
    {
        "id": "fb2feaac.bff7d",
        "type": "mqtt out",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "",
        "topic": "mischer/heizkreis/automatik",
        "qos": "2",
        "retain": "true",
        "broker": "bcebf477.ab97e8",
        "x": 930,
        "y": 1960,
        "wires": []
    },
    {
        "id": "98cabf7d.778b88",
        "type": "mqtt in",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "",
        "topic": "mischer/heizkreis/automatik",
        "qos": "2",
        "datatype": "auto",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 210,
        "y": 1960,
        "wires": [
            [
                "12f848c9.040157"
            ]
        ]
    },
    {
        "id": "12f848c9.040157",
        "type": "change",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "String2Boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 1960,
        "wires": [
            [
                "6d1e4684.73134"
            ]
        ]
    },
    {
        "id": "b8c2d750.b4bb88",
        "type": "mqtt in",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "",
        "topic": "mischer/heizkreis/heiss",
        "qos": "2",
        "datatype": "auto",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 190,
        "y": 1740,
        "wires": [
            [
                "f6204444.6fdf88",
                "57decf77.8d07e"
            ]
        ]
    },
    {
        "id": "3f596c5a.6514fc",
        "type": "mqtt in",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "",
        "topic": "mischer/heizkreis/kalt",
        "qos": "2",
        "datatype": "auto",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 190,
        "y": 1800,
        "wires": [
            [
                "2467d4c2.35bbac",
                "9109af28.583e"
            ]
        ]
    },
    {
        "id": "602cd7c6.77f1",
        "type": "mqtt out",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "",
        "topic": "mischer/heizkreis/kalt",
        "qos": "2",
        "retain": "true",
        "broker": "bcebf477.ab97e8",
        "x": 1330,
        "y": 1880,
        "wires": []
    },
    {
        "id": "7650c94a.d6e7c",
        "type": "mqtt out",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "",
        "topic": "mischer/heizkreis/heiss",
        "qos": "2",
        "retain": "true",
        "broker": "bcebf477.ab97e8",
        "x": 1340,
        "y": 1820,
        "wires": []
    },
    {
        "id": "f6204444.6fdf88",
        "type": "change",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "String2Boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 1740,
        "wires": [
            [
                "91eaed08.28107"
            ]
        ]
    },
    {
        "id": "2467d4c2.35bbac",
        "type": "change",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "String2Boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 1800,
        "wires": [
            [
                "91eaed08.28107"
            ]
        ]
    },
    {
        "id": "8e3c19f8.042ab8",
        "type": "mqtt in",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "",
        "topic": "steuerung/heizkreis/automatik",
        "qos": "2",
        "datatype": "auto",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 210,
        "y": 2020,
        "wires": [
            [
                "ffca6199.8325f"
            ]
        ]
    },
    {
        "id": "956c2937.881b1",
        "type": "mqtt out",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "",
        "topic": "steuerung/heizkreis/automatik",
        "qos": "2",
        "retain": "true",
        "broker": "bcebf477.ab97e8",
        "x": 940,
        "y": 2020,
        "wires": []
    },
    {
        "id": "ffca6199.8325f",
        "type": "change",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "String2Boolean",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "true",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "false",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 2020,
        "wires": [
            [
                "51cdc994.8243a8"
            ]
        ]
    },
    {
        "id": "cda21e86.56f2e",
        "type": "function",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "Invert",
        "func": "msg.payload = !msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 860,
        "y": 1880,
        "wires": [
            [
                "4b7b36e4.483aa8",
                "9fc9a5143f534e97"
            ]
        ]
    },
    {
        "id": "e3aa0446.346a78",
        "type": "function",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "Invert",
        "func": "msg.payload = !msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 860,
        "y": 1700,
        "wires": [
            [
                "1056c756.42e681",
                "2071c05983be31bd"
            ]
        ]
    },
    {
        "id": "57decf77.8d07e",
        "type": "debug",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "heiss",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 1680,
        "wires": []
    },
    {
        "id": "9109af28.583e",
        "type": "debug",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "kalt",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 1880,
        "wires": []
    },
    {
        "id": "f11dced2.19e3b",
        "type": "mqtt in",
        "z": "9cca99e1.170d68",
        "g": "e2e1a8f5.d9ce9",
        "name": "",
        "topic": "sensors/heizkreis/vorlauf_ist",
        "qos": "0",
        "datatype": "json",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 180,
        "y": 80,
        "wires": [
            [
                "72a573d2.dd954c"
            ]
        ]
    },
    {
        "id": "72a573d2.dd954c",
        "type": "function",
        "z": "9cca99e1.170d68",
        "g": "e2e1a8f5.d9ce9",
        "name": "set actual_output_temperature",
        "func": "flow.set(\"actual_output_temperature\", msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\nflow.set(\"process_variable\", NaN);",
        "finalize": "",
        "x": 510,
        "y": 80,
        "wires": [
            [
                "18276e49.2da3b2"
            ]
        ]
    },
    {
        "id": "18276e49.2da3b2",
        "type": "debug",
        "z": "9cca99e1.170d68",
        "g": "e2e1a8f5.d9ce9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 80,
        "wires": []
    },
    {
        "id": "8fa2e60b.250c1",
        "type": "mqtt in",
        "z": "9cca99e1.170d68",
        "g": "e2e1a8f5.d9ce9",
        "name": "",
        "topic": "sensors/aussentemperatur",
        "qos": "0",
        "datatype": "json",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 190,
        "y": 260,
        "wires": [
            [
                "558041c8.14396"
            ]
        ]
    },
    {
        "id": "558041c8.14396",
        "type": "function",
        "z": "9cca99e1.170d68",
        "g": "e2e1a8f5.d9ce9",
        "name": "set outdoor_temperature",
        "func": "flow.set(\"outdoor_temperature\", msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\nflow.set(\"outdoor_temperature\", undefined);",
        "finalize": "",
        "x": 490,
        "y": 260,
        "wires": [
            [
                "ac2a9b70.e42788"
            ]
        ]
    },
    {
        "id": "c8b99fa7.5123a8",
        "type": "mqtt in",
        "z": "9cca99e1.170d68",
        "g": "e2e1a8f5.d9ce9",
        "name": "",
        "topic": "mischer/heizkreis/vorlauf_soll",
        "qos": "0",
        "datatype": "json",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 180,
        "y": 180,
        "wires": [
            [
                "13cec1ea.9dd3de"
            ]
        ]
    },
    {
        "id": "e3db354.6766748",
        "type": "debug",
        "z": "9cca99e1.170d68",
        "g": "e2e1a8f5.d9ce9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 180,
        "wires": []
    },
    {
        "id": "13cec1ea.9dd3de",
        "type": "function",
        "z": "9cca99e1.170d68",
        "g": "e2e1a8f5.d9ce9",
        "name": "set setpoint",
        "func": "flow.set(\"setpoint\", msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\n\nflow.set(\"setpoint\", 50);",
        "finalize": "",
        "x": 450,
        "y": 180,
        "wires": [
            [
                "e3db354.6766748"
            ]
        ]
    },
    {
        "id": "ac2a9b70.e42788",
        "type": "debug",
        "z": "9cca99e1.170d68",
        "g": "e2e1a8f5.d9ce9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 260,
        "wires": []
    },
    {
        "id": "7abc7777.db1b28",
        "type": "mqtt in",
        "z": "9cca99e1.170d68",
        "g": "e2e1a8f5.d9ce9",
        "name": "",
        "topic": "sensors/heizkreis/1",
        "qos": "0",
        "datatype": "json",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 150,
        "y": 360,
        "wires": [
            [
                "1774f149.7eb5bf"
            ]
        ]
    },
    {
        "id": "1774f149.7eb5bf",
        "type": "function",
        "z": "9cca99e1.170d68",
        "g": "e2e1a8f5.d9ce9",
        "name": "set supply_temperature",
        "func": "flow.set(\"supply_temperature\", msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\nflow.set(\"outdoor_temperature\", undefined);",
        "finalize": "",
        "x": 450,
        "y": 360,
        "wires": [
            [
                "ef6d7064.443fa"
            ]
        ]
    },
    {
        "id": "ef6d7064.443fa",
        "type": "debug",
        "z": "9cca99e1.170d68",
        "g": "e2e1a8f5.d9ce9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 360,
        "wires": []
    },
    {
        "id": "7550b289.066954",
        "type": "mqtt in",
        "z": "9cca99e1.170d68",
        "g": "e2e1a8f5.d9ce9",
        "name": "",
        "topic": "puffer/heizkreis/load",
        "qos": "0",
        "datatype": "json",
        "broker": "bcebf477.ab97e8",
        "inputs": 0,
        "x": 150,
        "y": 420,
        "wires": [
            [
                "b4fd1a95.932ca"
            ]
        ]
    },
    {
        "id": "b4fd1a95.932ca",
        "type": "function",
        "z": "9cca99e1.170d68",
        "g": "e2e1a8f5.d9ce9",
        "name": "set supply_is_charing",
        "func": "flow.set(\"supply_is_charing\", msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\nflow.set(\"outdoor_temperature\", undefined);",
        "finalize": "",
        "x": 440,
        "y": 420,
        "wires": [
            [
                "29d07ec.404f402"
            ]
        ]
    },
    {
        "id": "29d07ec.404f402",
        "type": "debug",
        "z": "9cca99e1.170d68",
        "g": "e2e1a8f5.d9ce9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 420,
        "wires": []
    },
    {
        "id": "595ff2c6.a751cc",
        "type": "mqtt out",
        "z": "9cca99e1.170d68",
        "name": "Pub Mischer Command",
        "topic": "",
        "qos": "2",
        "retain": "true",
        "broker": "bcebf477.ab97e8",
        "x": 580,
        "y": 680,
        "wires": []
    },
    {
        "id": "a702e8d2.e4c1a8",
        "type": "function",
        "z": "9cca99e1.170d68",
        "g": "9c9be609.56ef8",
        "name": "calculate target room temp",
        "func": "room_temperature_night = msg.parameters.room_temperature_night;\nroom_temperature_day = msg.parameters.room_temperature_day;\n\n\nclock = new Date();\n\n\n// clock = datetime.datetime.now().time()\n// day_start = datetime.datetime.strptime(self.room_temperature.day_start, '%H:%M').time()\n// night_start = datetime.datetime.strptime(self.room_temperature.night_start, '%H:%M').time()\n//is_day = helpers.datetime.in_between(clock, day_start, night_start)\n\nis_day = true;\n\nmsg.topic = \"heizkreis/room_temperature\";\nmsg.args.target_room_temperature = is_day ? room_temperature_day : room_temperature_night;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 1000,
        "wires": [
            [
                "6434f846.c832"
            ]
        ]
    },
    {
        "id": "bf86ac2.cf633d",
        "type": "debug",
        "z": "9cca99e1.170d68",
        "g": "9c9be609.56ef8",
        "name": "calc",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 1000,
        "wires": []
    },
    {
        "id": "d6a54ee.abd0eb",
        "type": "inject",
        "z": "9cca99e1.170d68",
        "g": "9c9be609.56ef8",
        "name": "Cycle",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "args",
                "v": "{}",
                "vt": "json"
            },
            {
                "p": "parameters",
                "v": "{}",
                "vt": "json"
            },
            {
                "p": "args.outdoor_temperature",
                "v": "outdoor_temperature",
                "vt": "flow"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 160,
        "y": 1000,
        "wires": [
            [
                "d7cc465f.79d948"
            ]
        ]
    },
    {
        "id": "a27856df.14173",
        "type": "function",
        "z": "9cca99e1.170d68",
        "g": "9c9be609.56ef8",
        "name": "calculate vorlauf",
        "func": "// parameters\nslope = msg.parameters.slope // Steigung\noffset = msg.parameters.offset // temperature offset\nmax_temperature = msg.parameters.max_temperature // Max radiator temperature in [°C]\nfallback = msg.parameters.fallback // Backupwert\ndelta_exponent = msg.parameters.delta_exponent\n\n// args\ntarget_room_temperature = msg.args.target_room_temperature;\noutdoor_temperature = msg.args.outdoor_temperature;\n\n\n// initialization\nmsg = {}\nmsg.topic = \"mischer/heizkreis/vorlauf_soll\"\nmsg.payload = undefined\nmsg.logs = []\n\n// calculation\nin_out_delta = target_room_temperature - outdoor_temperature\n\nif (in_out_delta > 0) {\n    // Some ease-off function from delta_t to requested temperature\n    msg.payload = slope * in_out_delta ** delta_exponent + target_room_temperature + offset\n} else {\n    msg.logs.push(\"Calculation rule for negative delta is not defined\");\n    msg.payload = undefined\n}\n\nif (msg.payload == undefined) {\n    msg.logs.push(\"Fallback value used\");\n    msg.payload = fallback;\n}\n\n// max temperature limit\nmsg.payload = Math.min(msg.payload, max_temperature);\nmsg.payload = Math.round(msg.payload * 100) / 100; // round for the visuals\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\n\nflow.set(\"outdoor_temperature\", undefined);",
        "finalize": "",
        "x": 1120,
        "y": 1000,
        "wires": [
            [
                "bf86ac2.cf633d",
                "3b0f3160.98bec6"
            ]
        ]
    },
    {
        "id": "d7cc465f.79d948",
        "type": "change",
        "z": "9cca99e1.170d68",
        "g": "9c9be609.56ef8",
        "name": "set msg parameters",
        "rules": [
            {
                "t": "set",
                "p": "parameters.room_temperature_night",
                "pt": "msg",
                "to": "16",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "parameters.room_temperature_day",
                "pt": "msg",
                "to": "21",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 1000,
        "wires": [
            [
                "a702e8d2.e4c1a8"
            ]
        ]
    },
    {
        "id": "6434f846.c832",
        "type": "change",
        "z": "9cca99e1.170d68",
        "g": "9c9be609.56ef8",
        "name": "set msg parameters",
        "rules": [
            {
                "t": "set",
                "p": "parameters.slope",
                "pt": "msg",
                "to": "5.0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "parameters.offset",
                "pt": "msg",
                "to": "-2",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "parameters.max_temperature",
                "pt": "msg",
                "to": "60.0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "parameters.fallback",
                "pt": "msg",
                "to": "50.0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "parameters.delta_exponent",
                "pt": "msg",
                "to": "0.50",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 1000,
        "wires": [
            [
                "a27856df.14173",
                "dcb9e1f8.c69f3"
            ]
        ]
    },
    {
        "id": "dcb9e1f8.c69f3",
        "type": "debug",
        "z": "9cca99e1.170d68",
        "g": "9c9be609.56ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 1060,
        "wires": []
    },
    {
        "id": "3b0f3160.98bec6",
        "type": "mqtt out",
        "z": "9cca99e1.170d68",
        "g": "9c9be609.56ef8",
        "name": "Pub Mischer Command",
        "topic": "",
        "qos": "2",
        "retain": "true",
        "broker": "bcebf477.ab97e8",
        "x": 1350,
        "y": 1080,
        "wires": []
    },
    {
        "id": "d1d1ef29.fcda8",
        "type": "function",
        "z": "9cca99e1.170d68",
        "g": "5c0277c4.cc674",
        "name": "calculate heating state",
        "func": "// parameters\nmin_delta_supply_over_room_temperature = 4 // °C die das Heizungswasser über der geforderten Raumtemperatur sein muss, damit Heizbetrieb aktiviert wird\nmin_delta_indoor_outdoor = 3 // Mindestunterschied zwischen Raumsoll und Aussen bis Heizung einschaltet\nsupply_temperature_while_charging = 50 // Min Versorgungstemperatur in [°C], während ladevorgang\n\n\n// initialize variables\ndebug = {}\ndebug.logs = []\ntarget_room_temperature = msg.args.target_room_temperature\noutdoor_temperature = msg.args.outdoor_temperature\nsupply_temperature = msg.args.supply_temperature\nsupply_is_charing = msg.args.supply_is_charing\n\non_off = true;\n\n// sanity checks\ntarget_room_temperature == undefined ? debug.logs.push(\"target_room_temperature is undefined\") : {};\noutdoor_temperature == undefined ? debug.logs.push(\"outdoor_temperature is undefined\") : {};\nsupply_temperature == undefined ? debug.logs.push(\"supply_temperature is undefined\") : {};\nsupply_is_charing == undefined ? debug.logs.push(\"supply_is_charing is undefined\") : {};\n\n// Turn off if the supply temperature is too low\nif (supply_temperature < target_room_temperature + min_delta_supply_over_room_temperature) {\n    debug.logs.push(\"Turn off because temperature is too low\");          \n    on_off = false;\n}\n\n\n// Turn off if supplier is almost empty and charging\nelse if (supply_is_charing && supply_temperature < supply_temperature_while_charging) {\n    debug.logs.push(\"Turn off because supplier is charging and low\");      \n    on_off = false;\n    \n}\n\n// Turn off heating, if it get too warm outside\nelse if (target_room_temperature - outdoor_temperature < min_delta_indoor_outdoor) {\n    debug.logs.push(\"Turn off because outside is too warm\");                \n    on_off = false;\n}\n\n\n\n// build message\nmsg = {\n    \"topic\": \"pumpe/heizkreis/ein\",\n    \"payload\": on_off\n}\n\nreturn [msg, debug];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 590,
        "y": 1280,
        "wires": [
            [
                "f5e7433b.f6dc5"
            ],
            [
                "fc235731.15e17",
                "c45b691e.8ca66"
            ]
        ]
    },
    {
        "id": "54116430.c00884",
        "type": "inject",
        "z": "9cca99e1.170d68",
        "g": "5c0277c4.cc674",
        "name": "Cycle",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "args.target_room_temperature",
                "v": "target_room_temperature",
                "vt": "flow"
            },
            {
                "p": "args.outdoor_temperature",
                "v": "outdoor_temperature",
                "vt": "flow"
            },
            {
                "p": "args.supply_temperature",
                "v": "supply_temperature",
                "vt": "flow"
            },
            {
                "p": "args.supply_is_charing",
                "v": "supply_is_charing",
                "vt": "flow"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 1280,
        "wires": [
            [
                "d1d1ef29.fcda8",
                "94b0e331.394bb8"
            ]
        ]
    },
    {
        "id": "f5e7433b.f6dc5",
        "type": "debug",
        "z": "9cca99e1.170d68",
        "g": "5c0277c4.cc674",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 1260,
        "wires": []
    },
    {
        "id": "e11e378e.16d788",
        "type": "change",
        "z": "9cca99e1.170d68",
        "g": "5c0277c4.cc674",
        "name": "set msg args",
        "rules": [
            {
                "t": "set",
                "p": "args.target_room_temperature",
                "pt": "msg",
                "to": "target_room_temperature",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "args.outdoor_temperature",
                "pt": "msg",
                "to": "outdoor_temperature",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "args.supply_temperature",
                "pt": "msg",
                "to": "supply_temperature",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "args.supply_is_charing",
                "pt": "msg",
                "to": "supply_is_charing",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 1380,
        "wires": [
            [
                "d1d1ef29.fcda8",
                "94b0e331.394bb8"
            ]
        ]
    },
    {
        "id": "94b0e331.394bb8",
        "type": "debug",
        "z": "9cca99e1.170d68",
        "g": "5c0277c4.cc674",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 1360,
        "wires": []
    },
    {
        "id": "fc235731.15e17",
        "type": "debug",
        "z": "9cca99e1.170d68",
        "g": "5c0277c4.cc674",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 1360,
        "wires": []
    },
    {
        "id": "c45b691e.8ca66",
        "type": "mqtt out",
        "z": "9cca99e1.170d68",
        "g": "5c0277c4.cc674",
        "name": "Pub Mischer Command",
        "topic": "",
        "qos": "2",
        "retain": "true",
        "broker": "bcebf477.ab97e8",
        "x": 1030,
        "y": 1320,
        "wires": []
    },
    {
        "id": "6d2a173c.0739f",
        "type": "function",
        "z": "9cca99e1.170d68",
        "g": "a1732fa5.9289e",
        "name": "Control",
        "func": "\n\n\n// parameters\nKp = msg.parameters.Kp;\nKi = msg.parameters.Ki;\nKd = msg.parameters.Kd;\nhysteresis = msg.parameters.hysteresis;\n\n// arguments\nsetpoint = msg.args.setpoint;\nprocess_variable = msg.args.actual_output_temperature;\n\n// state variables\nprevious_error = context.get(\"previous_error\");\nprevious_process_variable = context.get(\"previous_process_variable\");\nintegral = context.get(\"integral\");\n\n\n\n/*\nCalling this method will start a periodic loop\n\nThe feedback controller is based on a simple PD controller\n*/\n\nif (setpoint == undefined) {\n    msg.warn = \"No target temperature set\"\n    return msg\n}\n\nif (process_variable == undefined) {\n    msg.warn =\"Unknown output temperature\"\n    return msg\n}\n\n// Calculate the targeted temperature change for this period\ndt = parseFloat(msg.period);\nerror = setpoint - process_variable;\nderivative = (previous_process_variable - process_variable) / dt;\nintegral = integral + error * dt;\ndelta = (Kp * error + Kd * derivative + Ki * integral);\n\n\n// store for the next iteration\ncontext.set(\"previous_process_variable\", process_variable);\ncontext.set(\"previous_error\", error);\ncontext.set(\"integral\", integral);\n\n\nmsg.topic = delta > 0 ? \"mischer/heizkreis/heiss\" : \"mischer/heizkreis/kalt\";\nmsg.payload = false;\nmsg.delay = 0;\nmsg.proportional_error = error;\nmsg.derivative_error = derivative;\nmsg.integral_error = integral;\n\n\n\nmsg.target_temperature_delta = delta;\n\nif (Math.abs(delta) > hysteresis) {\n    \n    cycle_period = msg.period;\n    temperature_to_time = 3.3 // seconds per degree\n    \n    // Topic depends on if we need to open or close the mixer\n    msg.payload = true;\n\n    // Calc the duty cycle\n    desired_time = temperature_to_time * Math.abs(delta);\n    duty_time = Math.min(desired_time, dt);\n    msg.delay = duty_time;\n    \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is deployed.\ncontext.set(\"integral\", 0);\ncontext.set(\"previous_process_variable\", 0); // TODO: initialize correctly\ncontext.set(\"previous_error\", 0);",
        "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\nflow.set(\"integral\", 0);",
        "x": 460,
        "y": 800,
        "wires": [
            [
                "898dd0ca.bc6d7",
                "595ff2c6.a751cc",
                "af0adec0.f89ae"
            ]
        ]
    },
    {
        "id": "9b8aabc0.eee198",
        "type": "inject",
        "z": "9cca99e1.170d68",
        "g": "a1732fa5.9289e",
        "name": "Cycle",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "period",
                "v": "25",
                "vt": "num"
            },
            {
                "p": "args.actual_output_temperature",
                "v": "actual_output_temperature",
                "vt": "flow"
            },
            {
                "p": "args.setpoint",
                "v": "setpoint",
                "vt": "flow"
            }
        ],
        "repeat": "25",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 720,
        "wires": [
            [
                "6e04e254.c7553c"
            ]
        ]
    },
    {
        "id": "b60b551.18a5a28",
        "type": "change",
        "z": "9cca99e1.170d68",
        "g": "a1732fa5.9289e",
        "name": "Set Idle",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 820,
        "wires": [
            [
                "41d03b1b.5912e4"
            ]
        ]
    },
    {
        "id": "e6103245.8a8e4",
        "type": "debug",
        "z": "9cca99e1.170d68",
        "g": "a1732fa5.9289e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 840,
        "wires": []
    },
    {
        "id": "41d03b1b.5912e4",
        "type": "mqtt out",
        "z": "9cca99e1.170d68",
        "g": "a1732fa5.9289e",
        "name": "Pub Mischer Command",
        "topic": "",
        "qos": "2",
        "retain": "true",
        "broker": "bcebf477.ab97e8",
        "x": 1240,
        "y": 820,
        "wires": []
    },
    {
        "id": "af0adec0.f89ae",
        "type": "debug",
        "z": "9cca99e1.170d68",
        "g": "a1732fa5.9289e",
        "name": "control",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 720,
        "wires": []
    },
    {
        "id": "6e04e254.c7553c",
        "type": "change",
        "z": "9cca99e1.170d68",
        "g": "a1732fa5.9289e",
        "name": "set msg parameters",
        "rules": [
            {
                "t": "set",
                "p": "parameters.Kp",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "parameters.Ki",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "parameters.Kd",
                "pt": "msg",
                "to": "70",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "parameters.hysteresis",
                "pt": "msg",
                "to": "2",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 820,
        "wires": [
            [
                "6d2a173c.0739f",
                "e6103245.8a8e4"
            ]
        ]
    },
    {
        "id": "9e048668.5369a8",
        "type": "debug",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 1520,
        "wires": []
    },
    {
        "id": "898dd0ca.bc6d7",
        "type": "delay-topic-message",
        "z": "9cca99e1.170d68",
        "g": "a1732fa5.9289e",
        "delay": "1",
        "x": 750,
        "y": 820,
        "wires": [
            [
                "b60b551.18a5a28"
            ]
        ]
    },
    {
        "id": "f71679d.aea5508",
        "type": "ui_switch",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "",
        "label": "Heizbetrieb",
        "tooltip": "Schaltet die Heizungspumpe an oder aus",
        "group": "28bde750.d2c1f8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 870,
        "y": 1580,
        "wires": [
            [
                "138de99b.b0f726"
            ]
        ]
    },
    {
        "id": "6d1e4684.73134",
        "type": "ui_switch",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "",
        "label": "Automatik",
        "tooltip": "Aktiviert die automatische Regelung des Mischers",
        "group": "526921e2.2519f",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 670,
        "y": 1960,
        "wires": [
            [
                "fb2feaac.bff7d"
            ]
        ]
    },
    {
        "id": "c4a1847f.56f95",
        "type": "ui_switch",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "",
        "label": "Heiss",
        "tooltip": "Stellt Manuell auf Heiss",
        "group": "526921e2.2519f",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1150,
        "y": 1820,
        "wires": [
            [
                "7650c94a.d6e7c"
            ]
        ]
    },
    {
        "id": "96fb6626.f6a998",
        "type": "ui_switch",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "",
        "label": "Kalt",
        "tooltip": "Stellt manuell auf kalt",
        "group": "526921e2.2519f",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1160,
        "y": 1880,
        "wires": [
            [
                "602cd7c6.77f1"
            ]
        ]
    },
    {
        "id": "51cdc994.8243a8",
        "type": "ui_switch",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "",
        "label": "Automatik",
        "tooltip": "Schaltet die Automatik der Heizungspumpe an oder aus",
        "group": "28bde750.d2c1f8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 670,
        "y": 2020,
        "wires": [
            [
                "956c2937.881b1"
            ]
        ]
    },
    {
        "id": "d867662.87a1298",
        "type": "ui_switch",
        "z": "9cca99e1.170d68",
        "d": true,
        "g": "8a3bb4a6.0dfde8",
        "name": "",
        "label": "Automatik",
        "tooltip": "Schaltet die Automatik der Heizungspumpe an oder aus",
        "group": "28bde750.d2c1f8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "heizbetrieb",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 680,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "b2c53d17.6e47f8",
        "type": "rpi-gpio out",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "Pumpe Heizkreis",
        "pin": "2",
        "set": false,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 1390,
        "y": 1600,
        "wires": []
    },
    {
        "id": "1056c756.42e681",
        "type": "rpi-gpio out",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "Mischer Waermer",
        "pin": "17",
        "set": false,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 1020,
        "y": 1700,
        "wires": []
    },
    {
        "id": "4b7b36e4.483aa8",
        "type": "rpi-gpio out",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "Mischer Kaelter",
        "pin": "27",
        "set": false,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 1360,
        "y": 2000,
        "wires": []
    },
    {
        "id": "9fc9a5143f534e97",
        "type": "pi-gpiod out",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "Mischer Kaelter",
        "host": "pigpiod",
        "port": 8888,
        "pin": "27",
        "set": "",
        "level": "0",
        "out": "out",
        "sermin": "1000",
        "sermax": "2000",
        "freq": "800",
        "x": 1360,
        "y": 2040,
        "wires": []
    },
    {
        "id": "2071c05983be31bd",
        "type": "pi-gpiod out",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "Mischer Waermer",
        "host": "pigpiod",
        "port": 8888,
        "pin": "17",
        "set": "",
        "level": "0",
        "out": "out",
        "sermin": "1000",
        "sermax": "2000",
        "freq": "800",
        "x": 1030,
        "y": 1760,
        "wires": []
    },
    {
        "id": "b8c5eec3414e7231",
        "type": "pi-gpiod out",
        "z": "9cca99e1.170d68",
        "g": "8a3bb4a6.0dfde8",
        "name": "Pumpe Heizkreis",
        "host": "pigpiod",
        "port": 8888,
        "pin": "2",
        "set": "",
        "level": "0",
        "out": "out",
        "sermin": "1000",
        "sermax": "2000",
        "freq": "800",
        "x": 1370,
        "y": 1660,
        "wires": []
    }
]